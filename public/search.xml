<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="2023/05/10/hello-world/"/>
      <url>2023/05/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo <span class="keyword">new</span> <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo <span class="keyword">server</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo <span class="keyword">generate</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ArchLinux安装与配置</title>
      <link href="2023/03/31/ArchLinux_install/"/>
      <url>2023/03/31/ArchLinux_install/</url>
      
        <content type="html"><![CDATA[<ul><li>从安装到配置使用</li></ul><a id="more"></a><h2 id="下载LiveCD"><a href="#下载LiveCD" class="headerlink" title="下载LiveCD"></a>下载LiveCD</h2><blockquote><p>可以从第三方源下载镜像</p></blockquote><p>官网</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://archlinux.org/download/</span><br></pre></td></tr></table></figure><p>ArchLinux WiKi</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://wiki.archlinux.org/</span><br></pre></td></tr></table></figure><p>我的是从清华源下的LiveCD：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.tuna.tsinghua.edu.cn/archlinux/iso/</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><p>因为ArchLinux的安装是全tty模式下进行的，也就是说没有GUI安装界面，全命令，由于镜像很小(毕竟LiveCD)，所以全程需要联网安装！由于内容多，所以制作启动盘这些的就直接跳过不讲。</p></blockquote><p>首先通过启动盘进入ArchLinux的Live环境，会发现进入默认是root身份！</p><h3 id="验证引导模式"><a href="#验证引导模式" class="headerlink" title="验证引导模式"></a>验证引导模式</h3><p>然后输入以下命令验证引导方式，如果显示一堆文件就说明此电脑为 <code>UEFI</code> 引导。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /sys/firmware/efi/efivars</span><br></pre></td></tr></table></figure><h3 id="联网"><a href="#联网" class="headerlink" title="联网"></a>联网</h3><p>如果是有线的话，一般内核兼容网卡能直接联网。无线的需要手动连接Wi-Fi。</p><h4 id="判断无线网卡是否被锁"><a href="#判断无线网卡是否被锁" class="headerlink" title="判断无线网卡是否被锁"></a>判断无线网卡是否被锁</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rfkill list  </span></span><br><span class="line">--------------</span><br><span class="line">0: phy0: Wireless LAN</span><br><span class="line">    Soft blocked: yes</span><br><span class="line">    Hard blocked: yes</span><br></pre></td></tr></table></figure><p>如果出现上述内容，则手动打开物理的无线开关，如果没有物理的无线开关，输入以下命令开启无线网卡。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rfkill unblock wifi</span><br></pre></td></tr></table></figure><h4 id="连接无线网络"><a href="#连接无线网络" class="headerlink" title="连接无线网络"></a>连接无线网络</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">iwctl                               //运行wifi管理器</span><br><span class="line"></span><br><span class="line">device list                         //列出无线网卡，一般都是wlan0。</span><br><span class="line"></span><br><span class="line">station wlan0 scan                  //扫描，wlan0是要联网的无线网卡。</span><br><span class="line"></span><br><span class="line">station wlan0 get-networks          //列出wifi列表</span><br><span class="line"></span><br><span class="line">station wlan0 connect &lt;wifi名称&gt;    //然后输入密码</span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span>                                //退出wifi管理器</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>此时要验证连接的wifi是否能联网！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping baidu.com</span><br></pre></td></tr></table></figure><h3 id="安装环境软件源的选择"><a href="#安装环境软件源的选择" class="headerlink" title="安装环境软件源的选择"></a>安装环境软件源的选择</h3><blockquote><p>ArchLinux的软件源有三类：官方源(ArchLinux)，社区源(ArchLinux-CN)，AUR源(ArchLinux 用户仓库)</p></blockquote><p>用 vim 打开 /etc/pacman.d/mirrorlist 加入国内源(这里用的是中科大源)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Server = https://mirrors.ustc.edu.cn/archlinux/<span class="variable">$repo</span>/os/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure><h3 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h3><p>我就设置了3个分区，都在同一个磁盘，分区方案如下：</p><ul><li><p>/dev/sdb1：EFI分区</p></li><li><p>/dev/sdb2：根分区</p></li><li><p>/dev/sdb3：交换分区</p></li></ul><p>格式化分区：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4  /dev/sdb2            <span class="comment">#格式化根目录分区</span></span><br><span class="line">mkfs.vfat  /dev/sdb1            <span class="comment">#格式化efi分区</span></span><br><span class="line">mkswap     /dev/sdb3            <span class="comment">#格式和swap分区</span></span><br></pre></td></tr></table></figure><p>然后就是挂载分区，毕竟需要把系统安装进去，先挂载根目录，然后挂载efi分区。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sdb2 /mnt            <span class="comment">#挂载根分区到/mnt目录下</span></span><br><span class="line">mkdir /mnt/efi                  <span class="comment">#创建efi文件夹</span></span><br><span class="line">mount /dev/sdb1 /mnt/efi        <span class="comment">#挂载efi分区</span></span><br><span class="line">swapon /dev/sdb3                <span class="comment">#挂载swap分区(可选)</span></span><br></pre></td></tr></table></figure><h3 id="基本安装"><a href="#基本安装" class="headerlink" title="基本安装"></a>基本安装</h3><p>下载并安装基础包到挂载的/mnt目录(也就是安装系统的分区)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacstrap /mnt base base-devel linux linux-headers linux-firmware  <span class="comment">#base-devel在AUR包的安装是必须的</span></span><br></pre></td></tr></table></figure><p>功能性组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacstrap /mnt dhcpcd iwd vim bash-completion   <span class="comment">#一个有线所需(iwd也需要dhcpcd) 一个无线所需 一个编辑器 一个补全工具</span></span><br></pre></td></tr></table></figure><h3 id="生成fstab"><a href="#生成fstab" class="headerlink" title="生成fstab"></a>生成fstab</h3><p>把挂载的分区情况生成fstab</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br></pre></td></tr></table></figure><p>检查一下fstab是否有错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /mnt/etc/fstab</span><br></pre></td></tr></table></figure><h3 id="切换进新系统"><a href="#切换进新系统" class="headerlink" title="切换进新系统"></a>切换进新系统</h3><p>把环境切换到刚才挂载的/mnt上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure><h3 id="时区设置"><a href="#时区设置" class="headerlink" title="时区设置"></a>时区设置</h3><p>设置时区，在/etc/localtime 下用/usr 中合适的时区创建符号连接。如下设置上海时区。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure><p>随后进行硬件时间设置，将当前的正确 UTC 时间写入硬件时间。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hwclock --systohc</span><br></pre></td></tr></table></figure><h3 id="设置locale进行本地化"><a href="#设置locale进行本地化" class="headerlink" title="设置locale进行本地化"></a>设置locale进行本地化</h3><p>Locale 决定了地域、货币、时区日期的格式、字符排列方式和其他本地化标准。</p><p>首先使用 vim 编辑 /etc/locale.gen，去掉 en_US.UTF-8 所在行以及 zh_CN.UTF-8 所在行的注释符号（#）。这里需要使用 vim 的寻找以及编辑功能，如果你忘记了，请翻到上一节复习 vim 的操作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/locale.gen</span><br></pre></td></tr></table></figure><p>然后使用如下命令生成 locale。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">locale-gen</span><br></pre></td></tr></table></figure><p>最后向 /etc/locale.conf 导入内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;LANG=en_US.UTF-8&#x27;</span>  &gt; /etc/locale.conf</span><br></pre></td></tr></table></figure><h3 id="设置主机名"><a href="#设置主机名" class="headerlink" title="设置主机名"></a>设置主机名</h3><p>首先在/etc/hostname设置主机名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hostname</span><br></pre></td></tr></table></figure><p>加入你想为主机取的主机名，这里比如叫 myarch。</p><p>接下来在/etc/hosts设置与其匹配的条目。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br></pre></td></tr></table></figure><p>加入如下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1   localhost</span><br><span class="line">::1         localhost</span><br><span class="line">127.0.1.1   myarch</span><br></pre></td></tr></table></figure><h3 id="root用户设置密码"><a href="#root用户设置密码" class="headerlink" title="root用户设置密码"></a>root用户设置密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure><h3 id="普通用户的创建"><a href="#普通用户的创建" class="headerlink" title="普通用户的创建"></a>普通用户的创建</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -m &lt;用户名&gt; -G wheel</span><br></pre></td></tr></table></figure><p>用户组设置为 wheel 是因为 wheel 在 /etc/passwd中包含，如果你有能力可以设置为其他的组或者自建组。</p><p>编辑 sudoers 文件赋予用户管理员权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sudoers</span><br></pre></td></tr></table></figure><p>注释掉 <code>%wheel ALL=(ALL:ALL) ALL</code> 如果想无密码 sudo 就把下面的 <code>NOPASSWD: ALL</code> 一行也取消注释。</p><h3 id="引导安装"><a href="#引导安装" class="headerlink" title="引导安装"></a>引导安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pacman -S grub efibootmgr   <span class="comment">#grub是启动引导器，efibootmgr被 grub 脚本用来将启动项写入 NVRAM。</span></span><br><span class="line">grub-install --target=x86_64-efi --efi-directory=/efi --removable</span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg    <span class="comment">#生成GRUB所需文件</span></span><br></pre></td></tr></table></figure><h3 id="完成安装并联网"><a href="#完成安装并联网" class="headerlink" title="完成安装并联网"></a>完成安装并联网</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span>                <span class="comment"># 退回安装环境#</span></span><br><span class="line">umount -R  /mnt     <span class="comment"># 卸载新分区</span></span><br><span class="line">reboot              <span class="comment"># 重启</span></span><br></pre></td></tr></table></figure><p>开启 dhcp 服务，即可连接网络</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start dhcpcd  <span class="comment">#立即启动dhcp</span></span><br><span class="line">ping baidu.com          <span class="comment">#测试网络连接</span></span><br></pre></td></tr></table></figure><p>若为无线链接，则还需要启动 iwd 才可以使用 iwctl 连接网络</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start iwd     <span class="comment">#立即启动iwd</span></span><br><span class="line">iwctl                   <span class="comment">#和之前的方式一样，连接无线网络</span></span><br></pre></td></tr></table></figure><p>一个无GUI的系统安装完成。</p><h2 id="安装后做的事"><a href="#安装后做的事" class="headerlink" title="安装后做的事"></a>安装后做的事</h2><blockquote><p>安装完系统，由于特别干净就一个GUI还有一堆东西没有安装与配置，这里就记录一下GUI图形界面的安装以及一些系统配置。</p></blockquote><h3 id="软件源的配置"><a href="#软件源的配置" class="headerlink" title="软件源的配置"></a>软件源的配置</h3><p>按照文档配置好archlinux的官方源、社区源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.ustc.edu.cn/<span class="built_in">help</span>/archlinux.html</span><br></pre></td></tr></table></figure><h3 id="开启32位支持库"><a href="#开启32位支持库" class="headerlink" title="开启32位支持库"></a>开启32位支持库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/pacman.conf</span><br></pre></td></tr></table></figure><p>去掉[multilib]一节中两行的注释，来开启 32 位库支持。</p><p>最后:wq 保存退出，刷新 pacman 数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Syyu</span><br></pre></td></tr></table></figure><p>重启电脑，即可看到欢迎界面，输入新用户的密码即可登录桌面</p><h3 id="GUI的选择"><a href="#GUI的选择" class="headerlink" title="GUI的选择"></a>GUI的选择</h3><p>Linux发行版的主要ide就这两个：</p><ul><li>KDE Plasma</li><li>gnome</li></ul><p>我用的是KDE Plasma。</p><h3 id="KDE-Plasma的安装"><a href="#KDE-Plasma的安装" class="headerlink" title="KDE Plasma的安装"></a>KDE Plasma的安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S plasma sddm konsole dolphin</span><br></pre></td></tr></table></figure><p>sddm是锁屏程序，konsole是GUI终端，dolphin是kde默认的文件管理器</p><p>设置锁屏程序开机自启(必须的，否则进不了桌面)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> sddm</span><br></pre></td></tr></table></figure><h3 id="基础功能包"><a href="#基础功能包" class="headerlink" title="基础功能包"></a>基础功能包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S sof-firmware alsa-firmware alsa-ucm-conf                     <span class="comment">#一些可能需要的声音固件</span></span><br><span class="line">sudo pacman -S ntfs-3g                                                      <span class="comment">#识别NTFS格式的硬盘</span></span><br><span class="line">sudo pacman -S adobe-source-han-serif-cn-fonts wqy-zenhei                   <span class="comment">#安装几个开源中文字体 一般装上文泉驿就能解决大多wine应用中文方块的问题,不安装中文字体无法在GUI使用中文</span></span><br><span class="line">sudo pacman -S noto-fonts-cjk noto-fonts-emoji noto-fonts-extra             <span class="comment">#安装谷歌开源字体及表情</span></span><br><span class="line">sudo pacman -S firefox chromium                                             <span class="comment">#安装常用的火狐、谷歌浏览器</span></span><br><span class="line">sudo pacman -S ark                                                          <span class="comment">#与dolphin同用右键解压</span></span><br><span class="line">sudo pacman -S p7zip unrar unarchiver lzop lrzip                            <span class="comment">#安装ark可选依赖</span></span><br><span class="line">sudo pacman -S packagekit-qt5 packagekit appstream-qt appstream             <span class="comment">#确保Discover(软件中心）可用 需重启</span></span><br><span class="line">sudo pacman -S gwenview                                                     <span class="comment">#图片查看器</span></span><br><span class="line">sudo pacman -S git wget kate <span class="built_in">bind</span>                                                <span class="comment">#一些工具</span></span><br></pre></td></tr></table></figure><h3 id="蓝牙的配置"><a href="#蓝牙的配置" class="headerlink" title="蓝牙的配置"></a>蓝牙的配置</h3><p>如果你有蓝牙设备，需要安装蓝牙软件包并启用蓝牙服务。随后在系统设置中进行添加设备与连接即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S bluez bluez-utils</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> --now bluetooth</span><br></pre></td></tr></table></figure><p>如果要连接蓝牙音频设备(如TWS)，需要安装 pulseaudio-bluetooth 并重启 pulseaudio。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S pulseaudio-bluetooth</span><br><span class="line">pulseaudio -k</span><br></pre></td></tr></table></figure><h3 id="配置系统默认编辑器"><a href="#配置系统默认编辑器" class="headerlink" title="配置系统默认编辑器"></a>配置系统默认编辑器</h3><p>默认情况下，Arch Linux 在一些终端编辑场景使用 vi 编辑器，但是我们使用 vim。如果不做一个额外配置，在 git 等场景下，在终端调用编辑器会出错。编辑 EDITOR=vim sudoedit /etc/profile 文件，加入如下内容，将 vim 设置为默认 EDITOR</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> EDITOR=<span class="string">&#x27;vim&#x27;</span></span><br></pre></td></tr></table></figure><p>这样就不用在每次执行命令时都指定一遍 EDITOR=vim 了。</p><h3 id="核显驱动"><a href="#核显驱动" class="headerlink" title="核显驱动"></a>核显驱动</h3><p>英特尔核芯显卡安装如下几个包即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S mesa lib32-mesa vulkan-intel lib32-vulkan-intel intel-media-driver libva-utils</span><br></pre></td></tr></table></figure><h2 id="安卓源码编译的依赖"><a href="#安卓源码编译的依赖" class="headerlink" title="安卓源码编译的依赖"></a>安卓源码编译的依赖</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S cpio</span><br><span class="line">sudo pacman -S libxcrypt-compat</span><br><span class="line">yay -S lineageos-devel</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu安装后需要做的事</title>
      <link href="2022/11/24/Ubuntu_install_after/"/>
      <url>2022/11/24/Ubuntu_install_after/</url>
      
        <content type="html"><![CDATA[<ul><li>Ubuntu20.04安装后需要做的事</li></ul><a id="more"></a><h2 id="更换软件源"><a href="#更换软件源" class="headerlink" title="更换软件源"></a>更换软件源</h2><blockquote><p>这里以华为源为例子</p></blockquote><p>1.备份配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp -a /etc/apt/sources.list /etc/apt/sources.list.bak</span><br></pre></td></tr></table></figure><p>2、修改sources.list文件，将<a href="http://archive.ubuntu.com和http//security.ubuntu.com%E6%9B%BF%E6%8D%A2%E6%88%90http://repo.huaweicloud.com%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%8F%82%E8%80%83%E5%A6%82%E4%B8%8B%E5%91%BD%E4%BB%A4%EF%BC%9A">http://archive.ubuntu.com和http://security.ubuntu.com替换成http://repo.huaweicloud.com，可以参考如下命令：</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i <span class="string">&quot;s@http://.*archive.ubuntu.com@http://repo.huaweicloud.com@g&quot;</span> /etc/apt/sources.list</span><br><span class="line">sudo sed -i <span class="string">&quot;s@http://.*security.ubuntu.com@http://repo.huaweicloud.com@g&quot;</span> /etc/apt/sources.list</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3、执行apt-get update更新索引</p><blockquote><p>清华源</p></blockquote><p>修改sources.list文件，更改为以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Ubuntu18.04 used</span></span><br><span class="line"><span class="comment"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Ubuntu20.04 used</span></span><br><span class="line"><span class="comment"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Ubuntu22.04 used</span></span><br><span class="line"><span class="comment"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span></span><br></pre></td></tr></table></figure><h2 id="关闭盖子不休眠"><a href="#关闭盖子不休眠" class="headerlink" title="关闭盖子不休眠"></a>关闭盖子不休眠</h2><p>编辑下列文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/systemd/logind.conf</span><br></pre></td></tr></table></figure><p>#HandlePowerKey按下电源键后的行为，默认power off</p><p>#HandleSleepKey 按下挂起键后的行为，默认suspend</p><p>#HandleHibernateKey按下休眠键后的行为，默认hibernate</p><p>#HandleLidSwitch合上笔记本盖后的行为，默认suspend（改为ignore；即合盖不休眠）在原文件中，还要去掉前面的#</p><p>然后将其中的：<br>#HandleLidSwitch=suspend改成下面，记得去掉“#”号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HandleLidSwitch=ignore</span><br></pre></td></tr></table></figure><p>最后重启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service systemd-logind restart</span><br></pre></td></tr></table></figure><p>注：在Ubuntu18.04和Ubuntu16.04笔记本电脑，下面测试可以使用。</p><h2 id="禁用nouveau"><a href="#禁用nouveau" class="headerlink" title="禁用nouveau"></a>禁用nouveau</h2><p>输入命令查看nouveau的状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep nouveau</span><br></pre></td></tr></table></figure><p>备份系统黑名单</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/modprobe.d/blacklist.conf /etc/modprobe.d/blacklist.conf_backup</span><br></pre></td></tr></table></figure><p>4.输入命令编辑系统黑名单。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/modprobe.d/blacklist.conf</span><br></pre></td></tr></table></figure><p>5.在系统黑名单配置文件最下面添加以下代码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nouveau</span></span><br><span class="line"></span><br><span class="line">blacklist nouveau</span><br><span class="line"></span><br><span class="line">options nouveau modeset=0</span><br></pre></td></tr></table></figure><p>6.更新配置信息使其生效。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-initramfs -u</span><br></pre></td></tr></table></figure><p>7.重启一下ubuntu。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><p>8.最后可以通过以下命令检查是否禁用成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep nouveau <span class="comment">#无返回结果说明禁用成功</span></span><br></pre></td></tr></table></figure><h2 id="安装nvidia闭源驱动"><a href="#安装nvidia闭源驱动" class="headerlink" title="安装nvidia闭源驱动"></a>安装nvidia闭源驱动</h2><p>安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gcc make -y</span><br></pre></td></tr></table></figure><p>下载好驱动，执行命令进行安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh NVIDIA-Linux-x86_64-440.44-titan_rtx.run</span><br></pre></td></tr></table></figure><p>如果没有错误，进入下一步，会出现警告，意思是缺少32位相关的兼容库，不用管，回车进入下一步</p><blockquote><p> WARNING: Unable to find a suitable destination to install 32-bit<br>          compatibility libraries. Your system may not be set up for 32-bit<br>          compatibility. 32-bit compatibility files will not be installed; if<br>          you wish to install them, re-run the installation and set a valid<br>          directory with the –compat32-libdir option.  </p></blockquote><p>意思是发现现在的libglvnd不是完整的，问你要不要安装完整版的libglvnd，可以装也可以不装，我这里选择不装Don’t install</p><blockquote><p>An incomplete installation of libglvnd was found. All of the essential<br>libglvnd libraries are present, but one or more optional components are<br>missing. Do you want to install a full copy of libglvnd? This will overwrite<br>any existing libglvnd libraries.</p></blockquote><p>上一步没安装libglvnd，所以出现警告，忽略，回车进入下一步</p><blockquote><p> WARNING: Unable to determine the path to install the libglvnd EGL vendor<br>          library config files. Check that you have pkg-config and the<br>          libglvnd development libraries installed, or specify a path with<br>          –glvnd-egl-config-path.</p></blockquote><p>问你要不要用nvidia-xconfig工具自动更新NVIDIA X的配置文件，不知道有啥用，选No，下一步</p><blockquote><p>Would you like to run the nvidia-xconfig utility to automatically update<br>your X configuration file so that the NVIDIA X driver will be used when you<br>restart X?  Any pre-existing X configuration file will be backed up.   </p></blockquote><p>检查是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure><h2 id="集显-独显切换"><a href="#集显-独显切换" class="headerlink" title="集显/独显切换"></a>集显/独显切换</h2><p> 查询当前选择的显卡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prime-select query</span><br></pre></td></tr></table></figure><p>切换独显</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo prime-select nvidia</span><br></pre></td></tr></table></figure><p>切换集显</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo prime-select intel</span><br></pre></td></tr></table></figure><p>查看nvidia显卡状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure><p>安装英特尔核显工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install intel-gpu-tools</span><br></pre></td></tr></table></figure><p>查看英特尔核显状态</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">int</span>el_gpu_top</span><br></pre></td></tr></table></figure><h2 id="关闭开机动画"><a href="#关闭开机动画" class="headerlink" title="关闭开机动画"></a>关闭开机动画</h2><p>打开文件：/etc/default/grub</p><p>找到下面这句：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=<span class="string">&quot;quiet splash&quot;</span></span><br></pre></td></tr></table></figure><p>去掉<font color="gree">quiet splash</font>后变成：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=<span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>然后update开机方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-grub</span><br></pre></td></tr></table></figure><h2 id="Ubuntu-Gnome美化"><a href="#Ubuntu-Gnome美化" class="headerlink" title="Ubuntu Gnome美化"></a>Ubuntu Gnome美化</h2><p>先要安装美化管理工具 gnome-tweak-tool</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gnome-tweak-tool</span><br></pre></td></tr></table></figure><p>安装 gnome-shell-extensions</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install gnome-shell-extensions</span><br></pre></td></tr></table></figure><p>安装 dashtodock</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gnome-shell-extension-dashtodock</span><br></pre></td></tr></table></figure><p>这个dashtodock有个小bug, 登录界面也会出现, 所以可以用如下命令修复, 注意这是在你开启dashtodock之后才会有的bug, 如果你不用, 就不要修改默认dock了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv /usr/share/gnome-shell/extensions/ubuntu-dock@ubuntu.com ~/</span><br></pre></td></tr></table></figure><p>主题设定：</p><ul><li><p>应用程序：Nordic-darker-v40</p></li><li><p>光标：MCMojave-cursors</p></li><li><p>图标：Epapirus</p></li></ul><p>字体：</p><ul><li><p>窗口标题：HarmonyOS Sans Black 11</p></li><li><p>界面：HarmonyOS Sans Regular 11</p></li><li><p>文档：HarmonyOS Sans Regular 11</p></li><li><p>等宽：HarmonyOS Sans Regular 13</p></li></ul><p>如何使用主题文件：</p><ul><li>在~目录下创建以下文件夹，然后解压主题文件放进去，其中.theme为主题，.icon为图标、指针等文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.theme</span><br><span class="line">.icon</span><br></pre></td></tr></table></figure><p>附下载链接：<a href="https://wwd.lanzouf.com/b02ow27jc">https://wwd.lanzouf.com/b02ow27jc</a><br>密码:eg8l</p><p>ubuntu Dock中移动“显示应用程序”图标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gsettings <span class="built_in">set</span> org.gnome.shell.extensions.dash-to-dock show-apps-at-top <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="ttf-mscorefonts-installer问题"><a href="#ttf-mscorefonts-installer问题" class="headerlink" title="ttf-mscorefonts-installer问题"></a>ttf-mscorefonts-installer问题</h2><p>故障显示：</p><blockquote><p>一些软件包的数据文件无法下载  以下软件包要求安装后下载附加数据，但其数据无法下载或无法处理。ttf-mscorefonts-installer</p></blockquote><p>这是一个永久错误，系统中的这些软件包将无法使用。您可能需要修复网络连接，然后卸载并重新安装它们。</p><p>解决方法：</p><p>到这个地址下载 <a href="http://sourceforge.net/projects/corefonts/files/the">http://sourceforge.net/projects/corefonts/files/the</a> fonts/final/    下面的这些文件都下载到一个单独的目录， 注意新建一个，例如：/home/<user>/Downloads/temp</user></p><p>另一个下载地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">wget http://downloads.sourceforge.net/corefonts/andale32.exe</span><br><span class="line"></span><br><span class="line">wget http://downloads.sourceforge.net/corefonts/arial32.exe</span><br><span class="line"></span><br><span class="line">wget http://downloads.sourceforge.net/corefonts/arialb32.exe</span><br><span class="line"></span><br><span class="line">wget http://downloads.sourceforge.net/corefonts/comic32.exe</span><br><span class="line"></span><br><span class="line">wget http://downloads.sourceforge.net/corefonts/courie32.exe</span><br><span class="line"></span><br><span class="line">wget http://downloads.sourceforge.net/corefonts/georgi32.exe</span><br><span class="line"></span><br><span class="line">wget http://downloads.sourceforge.net/corefonts/impact32.exe</span><br><span class="line"></span><br><span class="line">wget http://downloads.sourceforge.net/corefonts/times32.exe</span><br><span class="line"></span><br><span class="line">wget http://downloads.sourceforge.net/corefonts/trebuc32.exe</span><br><span class="line"></span><br><span class="line">wget http://downloads.sourceforge.net/corefonts/verdan32.exe</span><br><span class="line"></span><br><span class="line">wget http://downloads.sourceforge.NET/corefonts/webdin32.exe</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后执行 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg-reconfigure ttf-mscorefonts-installer </span><br></pre></td></tr></table></figure><p>这时会弹出一个对话框，大概意思，就是要在对话框里填写刚你现载文件的路径。</p><p>后续：这个方法有时也不灵光，这时直接让 ubuntu 安装整个附加包</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install ubuntu-restricted-extras</span><br></pre></td></tr></table></figure><h2 id="安装Python3和pip3"><a href="#安装Python3和pip3" class="headerlink" title="安装Python3和pip3"></a>安装Python3和pip3</h2><p>Python二代：Python</p><p>Python三代：Python3</p><p>pip也同理，不过pip为python-pip</p><p>安装python3：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python3</span><br></pre></td></tr></table></figure><p>安装pip：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python3-pip</span><br></pre></td></tr></table></figure><p>注意：这时安装完毕后的pip真实地址是： /usr/bin/pip3 ,也就是说，要用pip3这个命令去查看是否安装成功： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 --version </span><br></pre></td></tr></table></figure><p>可以用： dpkg -L python3-pip 查看一下安装的程序文件位置。</p><h2 id="安装sublime-text3"><a href="#安装sublime-text3" class="headerlink" title="安装sublime-text3"></a>安装sublime-text3</h2><p>安装Sublime text3：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb https://download.sublimetext.com/ apt/stable/&quot;</span> | sudo tee /etc/apt/sources.list.d/sublime-text.list</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install sublime-text</span><br></pre></td></tr></table></figure><h2 id="MPV配置文件"><a href="#MPV配置文件" class="headerlink" title="MPV配置文件"></a>MPV配置文件</h2><p>把文件放在~.config/mpv目录下</p><p>创建mpv.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#强制CPU软解</span></span><br><span class="line"><span class="comment">#hwdec=no</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#硬解</span></span><br><span class="line"><span class="comment">#hwdec=vaapi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#没有边框</span></span><br><span class="line">no-border</span><br><span class="line"></span><br><span class="line"><span class="comment">#开启MPV默认高质量渲染</span></span><br><span class="line"><span class="comment">#profile=gpu-hq</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#默认色彩管理</span></span><br><span class="line"><span class="comment">#icc-profile-auto</span></span><br><span class="line"><span class="comment">#blend-subtitles=video</span></span><br><span class="line"><span class="comment">#scale=ewa_lanczossharp</span></span><br><span class="line"><span class="comment">#video-sync=display-resample</span></span><br><span class="line"><span class="comment">#interpolation</span></span><br><span class="line"><span class="comment">#tscale=oversample</span></span><br><span class="line"></span><br><span class="line">hwdec=vdpau</span><br></pre></td></tr></table></figure><p>创建input.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">MBTN_LEFT     ignore<span class="comment">#鼠标左键 无操作</span></span><br><span class="line">MBTN_LEFT_DBL cycle fullscreen<span class="comment">#左键双击 全屏/退出全屏</span></span><br><span class="line">MBTN_RIGHT    cycle pause<span class="comment">#右键 暂停/继续</span></span><br><span class="line">MBTN_BACK     playlist-prev<span class="comment">#侧键向前 播放列表上一个</span></span><br><span class="line">MBTN_FORWARD  playlist-next<span class="comment">#侧键向后 播放列表下一个</span></span><br><span class="line">WHEEL_UP      add volume 1<span class="comment">#滚轮向上 音量+5</span></span><br><span class="line">WHEEL_DOWN    add volume -1<span class="comment">#滚轮向下 音量-5</span></span><br><span class="line"></span><br><span class="line">ESC <span class="built_in">set</span> fullscreen no<span class="comment">#ESC 退出全屏</span></span><br><span class="line">SPACE cycle pause<span class="comment">#空格 暂停/继续</span></span><br><span class="line">ENTER cycle fullscreen<span class="comment">#回车 全屏/退出全屏</span></span><br><span class="line">KP_ENTER cycle fullscreen<span class="comment">#小键盘回车 全屏/退出全屏</span></span><br><span class="line"></span><br><span class="line">UP  add volume 2<span class="comment">#方向键上 音量+2</span></span><br><span class="line">DOWN  add volume -2<span class="comment">#方向键下 音量-2</span></span><br><span class="line">Shift+UP  add volume  10<span class="comment">#音量+10</span></span><br><span class="line">Shift+DOWN  add volume -10</span><br><span class="line">LEFT  seek -2<span class="comment">#方向键左 后退2秒</span></span><br><span class="line">RIGHT seek  2<span class="comment">#方向键右 前进2秒</span></span><br><span class="line">Shift+LEFT  seek -30 exact</span><br><span class="line">Shift+RIGHT seek 85 exact<span class="comment">#前进85秒，便于跳op</span></span><br><span class="line">Ctrl+UP add audio-delay -0.1<span class="comment">#音频延迟-0.1</span></span><br><span class="line">Ctrl+DOWN add audio-delay +0.1</span><br><span class="line">Ctrl+LEFT add sub-delay -0.1<span class="comment">#字幕延迟-0.1</span></span><br><span class="line">Ctrl+RIGHT  add sub-delay 0.1</span><br><span class="line"></span><br><span class="line"><span class="comment">#播放列表上一个、下一个；</span></span><br><span class="line">PGUP playlist-prev</span><br><span class="line">PGDWN playlist-next</span><br><span class="line"><span class="comment">#视频内上一、下一章节</span></span><br><span class="line">HOME add chapter -1</span><br><span class="line">END add chapter 1</span><br><span class="line"></span><br><span class="line">t cycle ontop<span class="comment">#设置窗口最前</span></span><br><span class="line">= screenshot video<span class="comment">#视频截图</span></span><br><span class="line">+ screenshot<span class="comment">#带界面（OSC/OSD）截图</span></span><br><span class="line">z <span class="built_in">set</span> speed 1.0<span class="comment">#播放速度设为1</span></span><br><span class="line">c add speed 0.1<span class="comment">#播放速度+0.1</span></span><br><span class="line">x add speed -0.1<span class="comment">#播放速度-0.1</span></span><br><span class="line">k show_text <span class="variable">$&#123;track-list&#125;</span><span class="comment">#显示轨道信息</span></span><br><span class="line">l show_text <span class="variable">$&#123;playlist&#125;</span><span class="comment">#显示播放列表</span></span><br><span class="line">a cycle audio<span class="comment">#切换音轨</span></span><br><span class="line">f cycle mute<span class="comment">#静音/取消静音</span></span><br><span class="line">s cycle sub<span class="comment">#切换字幕轨</span></span><br><span class="line">d cycle sub-visibility<span class="comment">#隐藏字幕/显示字幕</span></span><br><span class="line">\ show-progress<span class="comment">#显示播放进度</span></span><br><span class="line">TAB script-binding stats/display-stats-toggle<span class="comment">#打开播放信息，1234翻页，4查看激活的快捷键方案 </span></span><br></pre></td></tr></table></figure><h2 id="核显视频硬解"><a href="#核显视频硬解" class="headerlink" title="核显视频硬解"></a>核显视频硬解</h2><blockquote><p>Intel核显的视频硬件，主要用VA-API来进行解码</p></blockquote><p>七代之前的安装以下依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install i965-va-driver-shaders libva-drm2 libva-x11-2</span><br></pre></td></tr></table></figure><p>八代以上的安装以下依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install intel-media-va-driver-non-free libva-drm2 libva-x11-2</span><br></pre></td></tr></table></figure><p>参考链接：</p><p><a href="https://www.linuxuprising.com/2021/01/how-to-enable-hardware-accelerated.html">How To Enable Hardware Accelerated Video Decode In Google Chrome, Brave, Vivaldi And Opera Browsers On Debian, Ubuntu Or Linux Mint - Linux Uprising Blog</a></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何编译第三方类原生</title>
      <link href="2022/11/24/Build_custom_android/"/>
      <url>2022/11/24/Build_custom_android/</url>
      
        <content type="html"><![CDATA[<ul><li>这是我自己的编译笔记，写得非常垃圾就对了，其实你们认真看下去并操作，是能看懂的</li></ul><a id="more"></a><h2 id="看完后能学到什么，可以成为一个合格的buildbot吗？"><a href="#看完后能学到什么，可以成为一个合格的buildbot吗？" class="headerlink" title="看完后能学到什么，可以成为一个合格的buildbot吗？"></a>看完后能学到什么，可以成为一个合格的buildbot吗？</h2><p>很遗憾地告诉你，不能！至少知道一个类原生是怎么编译出来的。说了那么多废话还是大概说一下流程，其实就是下载(同步)源码，找到device tree等配置文件后编译而已，期间当然需要安装一些依赖之类的。</p><h2 id="配置要求"><a href="#配置要求" class="headerlink" title="配置要求"></a>配置要求</h2><p>这是本文采取的硬件配置</p><table><thead><tr><th>名称</th><th>型号或者配置</th><th>备注</th></tr></thead><tbody><tr><td>CPU</td><td>i7-8550U</td><td>线程越多速度越快</td></tr><tr><td>内存条</td><td>8G</td><td>最低8G，建议32GB起步</td></tr><tr><td>硬盘</td><td>三星PM871</td><td>编译必须固态！</td></tr><tr><td>系统</td><td>Ubuntu20.04</td><td>其他Linux发行版也可以，但不建议WSL</td></tr><tr><td>所需空间</td><td>217.3GB</td><td>这个是编译ArrowOS12.1的最低空间，建议250GB</td></tr><tr><td>SWAP/zram</td><td>20GB</td><td>总之 内存+交换分区 至少要大于32GB</td></tr></tbody></table><h2 id="安装编译依赖"><a href="#安装编译依赖" class="headerlink" title="安装编译依赖"></a>安装编译依赖</h2><blockquote><p>怎么设置国内源我就不说了</p></blockquote><p>以下的编译依赖，来自LineageOS wiki：<a href="https://wiki.lineageos.org/devices/instantnoodle/build">Build for instantnoodle | LineageOS Wiki</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev libelf-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev</span><br></pre></td></tr></table></figure><p>然后顺便安装个python3，毕竟repo需要用到！可以参考这条命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python-is-python3</span><br></pre></td></tr></table></figure><blockquote><p>补充,如果用的是Debian bookworn,用下面的也可以</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install make gcc flex bison libssl-dev curl git libncurses5-dev zip libfdt1 device-tree-compiler imagemagick rsync</span><br></pre></td></tr></table></figure><h2 id="同步源码"><a href="#同步源码" class="headerlink" title="同步源码"></a>同步源码</h2><h3 id="一、配置repo"><a href="#一、配置repo" class="headerlink" title="一、配置repo"></a>一、配置repo</h3><p>先在 <code>&#123;home&#125;</code> 下创建目录 <code>bin</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir bin</span><br></pre></td></tr></table></figure><p>下载 <code>repo</code> 到 <code>&#123;home&#125;/bin</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://storage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo</span><br></pre></td></tr></table></figure><p>然后赋予执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x ~/bin/repo</span><br></pre></td></tr></table></figure><p>修改刚才下载的repo文件,把repo_url的链接改成如下的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.tuna.tsinghua.edu.cn/git/git-repo/</span><br></pre></td></tr></table></figure><p>​    <img src="/2022/11/24/Build_custom_android/repo.png" alt="repo"></p><p>然后使用以下命令打开 <code>.bashrc</code>，主要是配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gedit ~/.bashrc</span><br></pre></td></tr></table></figure><p>在 <code>.bashrc</code> 添加以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PATH=~/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>接着使用以下命令刷新系统的环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>注意：不要手动用apt install repo来安装repo !否则会冲突系统会优先使用apt安装的repo，从而导致拉取repo源码配置文件，一直访问谷歌。</p><h3 id="二、Git账号配置"><a href="#二、Git账号配置" class="headerlink" title="二、Git账号配置"></a>二、Git账号配置</h3><p>这个我就不多说了，LineageOS wiki里面也有，这个用户名和账号可以随便填</p><img src="/2022/11/24/Build_custom_android/repo_config.png"><h3 id="三、初始化repo仓库"><a href="#三、初始化repo仓库" class="headerlink" title="三、初始化repo仓库"></a>三、初始化repo仓库</h3><blockquote><p>终于到拉源码的正文了是吧，哈哈哈哈哈哈哈哈哈</p></blockquote><p>首先，在你需要拉源码的地方创建一个文件夹，比如说我要拉取LineageOS19.1的，那我就创建一个LineageOS文件夹吧，然后在终端进入这个文件夹。</p><p>因为像 LineageOS 为代表的类原生，是开源到 Github 的，所以在 Github 能找到 <a href="https://github.com/LineageOS">LineageOS </a>的官方用户，找到 <code>android</code> 仓库，这个仓库有同步源码的说明，因为我们是编译Lineage-19.1 (对应安卓版本是12.1)，选择 lineage-19.1 分支就行。</p><img src="/2022/11/24/Build_custom_android/switch_branch.png"><p>然后执行这个命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo init -u https://github.com/LineageOS/android.git -b lineage-19.1 --depth=1</span><br></pre></td></tr></table></figure><p>也许你们会有疑问，为何与官方的 <em>readme</em> 多了个 –depth=1 ？</p><p>答：这是仅同步最近的一个版本提交，没加的话就拉取全部提交了，这样所需空间217.3GB是不可能够的。</p><h3 id="四、同步源码"><a href="#四、同步源码" class="headerlink" title="四、同步源码"></a>四、同步源码</h3><blockquote><p>新手们也许就盲目跟着官方 README走，直接执行repo sync 了，然后一堆 404 ：什么的谷歌404，Github访问不了</p></blockquote><p>你们需要修改一下repo配置文件，首先修改 <code>.repo/manifest/default.xml </code></p><p>把下面的fetch（标红的）改成国内的镜像站点，比如说：</p><p>清华大学镜像源：<a href="https://mirrors.tuna.tsinghua.edu.cn/git/AOSP">https://mirrors.tuna.tsinghua.edu.cn/git/AOSP</a></p><p>北京外国语大学镜像源：<a href="https://mirrors.bfsu.edu.cn/git/AOSP/">https://mirrors.bfsu.edu.cn/git/AOSP</a></p><p>建议用后者，清华大学镜像站会抽风！这样就解决了AOSP源访问谷歌的问题</p><img src="/2022/11/24/Build_custom_android/use_aosp.png"><p>然后还要修改一下 <code>.repo/manifests.git/config</code> 把Github改成国内可用的镜像源</p><img src="/2022/11/24/Build_custom_android/set_config.png"><p>推荐几个吧，选一个就行(好像有一些镜像站挂了，先打开浏览看看)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.githubjs.cf/</span><br><span class="line">https://hub.fastgit.xyz/</span><br><span class="line">https://fasthub.cc/</span><br></pre></td></tr></table></figure><p>改好了就可以愉快地</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo sync</span><br></pre></td></tr></table></figure><h3 id="五、同步源码需要注意什么"><a href="#五、同步源码需要注意什么" class="headerlink" title="五、同步源码需要注意什么"></a>五、同步源码需要注意什么</h3><p>建议深夜同步源码吧，最好避开下午，当然有科学上网那就更好</p><h2 id="编译源码"><a href="#编译源码" class="headerlink" title="编译源码"></a>编译源码</h2><blockquote><p>这里坑有点艹，内存足够大的就不必担心</p></blockquote><h3 id="一、准备好编译的配置文件"><a href="#一、准备好编译的配置文件" class="headerlink" title="一、准备好编译的配置文件"></a>一、准备好编译的配置文件</h3><blockquote><p>主要是以下内容</p></blockquote><ul><li>device-tree</li><li>kernel-source</li><li>vendor-blob</li><li>hardware-hal</li></ul><p>至于这些tree怎么找，这里已经有人说了</p><p><a href="https://www.cnblogs.com/luoyesiqiu/p/10701419.html">自己动手编译Android(LineageOS)源码 - luoyesiqiu - 博客园 (cnblogs.com)</a></p><h3 id="二、编译"><a href="#二、编译" class="headerlink" title="二、编译"></a>二、编译</h3><p>进入刚才同步源码的目录，执行以下命令配置安卓编译环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> build/envsetup.sh</span><br></pre></td></tr></table></figure><p>然后就 lunch 初始化设备</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lunch lineage_OP4AD9-eng</span><br></pre></td></tr></table></figure><p>接着就编译了输入以下命令，建议后缀加上tee | xxx.txt保存终端输出的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brunch lineage_OP4AD9-eng | tee build.txt</span><br></pre></td></tr></table></figure><h3 id="三、编译出来的包在哪里"><a href="#三、编译出来的包在哪里" class="headerlink" title="三、编译出来的包在哪里"></a>三、编译出来的包在哪里</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">源码目录/out/target/product/设备代号/</span><br></pre></td></tr></table></figure><p>你会找到包、recovery.img等一系列内容</p><h2 id="编译遇到的问题"><a href="#编译遇到的问题" class="headerlink" title="编译遇到的问题"></a>编译遇到的问题</h2><h3 id="一、8GB物理内存太低导致后期无法编译"><a href="#一、8GB物理内存太低导致后期无法编译" class="headerlink" title="一、8GB物理内存太低导致后期无法编译"></a>一、8GB物理内存太低导致后期无法编译</h3><p>在源码目录/build/soong/java/droidstubs.go 找到 <code>Flag(config.JavacVmFlags).</code> 在下面添加以下语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Flag(<span class="string">&quot;-J-Xmx6114m&quot;</span>).</span><br></pre></td></tr></table></figure><h3 id="二、编译的终端进程被系统杀掉了"><a href="#二、编译的终端进程被系统杀掉了" class="headerlink" title="二、编译的终端进程被系统杀掉了"></a>二、编译的终端进程被系统杀掉了</h3><p>一看就知道你装了Ubuntu22.04，21版本就不清楚了，看这个吧</p><p><a href="https://answers.launchpad.net/ubuntu/+question/701605">Question #701605 “Terminal closes itself when building Android r…” : Questions : Ubuntu (launchpad.net)</a></p><h3 id="三、posix-spawn-Argument-list-too-long"><a href="#三、posix-spawn-Argument-list-too-long" class="headerlink" title="三、posix_spawn: Argument list too long"></a>三、posix_spawn: Argument list too long</h3><img src="/2022/11/24/Build_custom_android/posix_spawn.png"><p>恭喜，摆烂吧，没救了，换个类原生看看吧。</p><h2 id="其他要说的"><a href="#其他要说的" class="headerlink" title="其他要说的"></a>其他要说的</h2><p>问：用了–depth=1同步安卓12.1的源码有多大？</p><p>答：.repo本体就22.5G，加上释放出来的文件，大约94.5GB。</p><br><p>问：编译出来的out目录，用了多少空间</p><p>答：我记得编译过一次arrowos12.1，好像是122.8G吧。</p><br><p>问：你在编译的时候，soong加载阶段用时也很长吗？你电脑编译完一个包用了多久？</p><p>答：是的，大概用了30分钟，如果内存是32GB就没必要担忧此事。编译时间用了6小时。</p><br><p>问：有没有办法可以缩短soong加载阶段的时间？</p><p>答：用zram取代swap可以达到事半功倍的效果，我用了之后，soong阶段时间从原来的30min缩减到10min</p><br><p>问：VPS怎么选购？</p><p>答：我没用VPS，毕竟没信用卡，不过要注意VPS缩水和限制性能的情况！</p><br><p>问：去淘宝租远程主机怎样？</p><p>答：这也是个好选择。就是传输编译文件比较烦人。</p><br><p>问：编译有啥技巧吗？</p><p>答：可以先make bootiamge或者make recoveryimage看看内核源码是否能正常编译和使用。如果要测试编译的系统是否能正常开机之类的就使用make systemimage,make odmimage等一系列的命令编译出img文件，打包成zip，通过dsu来临时加载编译的镜像(如果是A-only分区的,需要单独刷如boot.img和dtbo.img)。</p><br><p>问：有大佬做的视频的编译教学吗？</p><p>答：有，看这个，这个是早期安卓版本适配 <code>device-tree</code> 的视频，虽然视频的编译内容占比少，但是能让你们大体知道 <code>device tree</code> , <code>vendor blob</code> 等东西是怎么来的！</p><p><a href="https://gitlab.com/alaskalinuxuser/advanced_course_android_developer_guide_mp4">https://gitlab.com/alaskalinuxuser/advanced_course_android_developer_guide_mp4</a></p><br><p>问：如果编译出来的包，开机直接进入fastboot该怎么分析原因？</p><p>答：理论上可以通过pstore来抓取这类崩溃日志的，实际上你压根就抓不了pstore，遇到这种情况你要看看fstab啥的是否写对，分区挂载是否全，内核的SELinux是否有问题等……</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://wiki.lineageos.org/devices/instantnoodle/build">Build for instantnoodle | LineageOS Wiki</a></p><p><a href="https://github.com/LineageOS/android">LineageOS/android (github.com)</a></p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/">AOSP | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror</a></p><p>[<a href="https://forum.xda-developers.com/t/guide-how-to-build-android-11-with-low-ram.4298483/">GUIDE] How to build Android 11 with low ram | XDA Forums (xda-developers.com)</a></p><p><a href="https://fedoraproject.org/wiki/User:Tuju/Disable_systemd-oomd">https://fedoraproject.org/wiki/User:Tuju/Disable_systemd-oomd</a></p><p><a href="https://answers.launchpad.net/ubuntu/+question/701605">Question #701605 “Terminal closes itself when building Android r…” : Questions : Ubuntu (launchpad.net)</a></p><p><a href="https://www.cnblogs.com/luoyesiqiu/p/10701419.html">自己动手编译Android(LineageOS)源码 - luoyesiqiu - 博客园 (cnblogs.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>终端配置与美化</title>
      <link href="2021/03/28/hackintosh3/"/>
      <url>2021/03/28/hackintosh3/</url>
      
        <content type="html"><![CDATA[<ul><li>homebrew</li><li>Oh-My-Zsh</li></ul><a id="more"></a><h2 id="一、包管理（第三方）"><a href="#一、包管理（第三方）" class="headerlink" title="一、包管理（第三方）"></a>一、包管理（第三方）</h2><blockquote><p>homebrew是macOS的一个第三方包管理，类似于Linux的apt/yum，不同的是，macOS官方没有包管理，macOS的包管理都是第三方开发者搞的</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>在终端执行以下指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/zsh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><p>结果如图所示：</p><p>​    <img src="/2021/03/28/hackintosh3/install_homebrew.png" alt="install_homebrew"></p><ul><li>推荐中科大源，选择后就开始从gitee边下载边安装</li></ul><blockquote><p>如果想下载完然后安装，那就把<a href="https://gitee.com/cunkai/HomebrewCN">https://gitee.com/cunkai/HomebrewCN</a> 整个仓库克隆下来，进入/raw/master/执行Homebrew.sh</p></blockquote><ul><li><p>安装完遗留的权限问题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 /usr/<span class="built_in">local</span>/share/zsh</span><br><span class="line">chmod 755 /usr/<span class="built_in">local</span>/share/zsh/site-functions</span><br></pre></td></tr></table></figure></li><li><p>卸载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/zsh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/HomebrewUninstall.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="二、Oh-My-Zsh"><a href="#二、Oh-My-Zsh" class="headerlink" title="二、Oh-My-Zsh"></a>二、Oh-My-Zsh</h2><blockquote><p>它是啥，请百度，我不知</p></blockquote><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li><p>Shell系列</p><p><a href="https://gitee.com/pocmon/ohmyzsh">https://gitee.com/pocmon/ohmyzsh</a></p></li><li><p>Terminal 主题</p><p>Term2-Color-Schemes-master，在GitHub或者Gitee找，主题配置文件请选择terminal文件夹的（因为macOS自带的终端就是terminal）</p></li><li><p>Powerline字体</p><p>因为Oh-My-Zsh有其他特殊的符号，用系统默认字体会显示乱吗</p></li><li><p>autojump</p><p>这个要安装，使用brew install autojump安装即可</p></li></ul><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://gitee.com/pocmon/ohmyzsh/raw/master/tools/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><h3 id="配置Oh-My-Zsh"><a href="#配置Oh-My-Zsh" class="headerlink" title="配置Oh-My-Zsh"></a>配置Oh-My-Zsh</h3><p>修改Oh-My-Zsh的配置文件.zshrc，位于～目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc <span class="comment">#修改.zshrc文件</span></span><br></pre></td></tr></table></figure><p>把Oh-My-Zsh的主题改成<strong>agnoster</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZSH_THEME=<span class="string">&quot;agnoster&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/03/28/hackintosh3/agnoster.png" alt="agnoster"></p><p>Oh-My-Zsh其他配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/share/vim/vimrc ~/.vimrc<span class="comment">#复制 vim 配置模版</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;syntax on&#x27;</span> &gt;&gt; ~/.vimrc<span class="comment">#开启语法高亮</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;set nu!&#x27;</span> &gt;&gt; ~/.vimrc<span class="comment">#开启行号显示</span></span><br></pre></td></tr></table></figure><h3 id="安装autojump"><a href="#安装autojump" class="headerlink" title="安装autojump"></a>安装autojump</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install autojump</span><br></pre></td></tr></table></figure><h3 id="Powerline字体"><a href="#Powerline字体" class="headerlink" title="Powerline字体"></a>Powerline字体</h3><p>（因为macOS默认终端无法编码agnoster主题的字体，所以…..）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将 Powerline 字体文件下载到「下载」文件夹中</span></span><br><span class="line"><span class="built_in">cd</span> ~/Downloads &amp;&amp; git <span class="built_in">clone</span> https://github.com/powerline/fonts.git</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装所有 Powerline 字体</span></span><br><span class="line"><span class="built_in">cd</span> fonts &amp;&amp; ./install.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除下载的字体文件</span></span><br><span class="line"><span class="built_in">cd</span> &amp;&amp; rm -rf ~/Downloads/fonts</span><br></pre></td></tr></table></figure><h3 id="终端主题"><a href="#终端主题" class="headerlink" title="终端主题"></a>终端主题</h3><ul><li><p>修改终端主题</p><p>去GitHub下载iTerm2-Color-Schemes-master项目的主题配置文件，然后导入即可</p></li></ul><p>  <img src="/2021/03/28/hackintosh3/import_theme.png" alt="import_theme"></p><ul><li><p>修改终端字体</p><p>进入终端-&gt;偏好设置-&gt;描述文件，然后选择某个主题，选择后就开始修改字体，这里就选择Droid Sans系列的<strong>（字体集要选择所有字体）</strong></p></li></ul><p>  <img src="/2021/03/28/hackintosh3/terminal_font.png" alt="terminal_font"></p><ul><li><p>主题推荐</p><ul><li>Gruvbox</li><li>One Dark / One Light</li><li>Snazzy</li></ul></li><li><p>设置默认终端主题</p><p>选择了一个主题后，然后点击默认</p></li></ul><p>  <img src="/2021/03/28/hackintosh3/default_theme.png" alt="default_theme"></p><h2 id="最终预览"><a href="#最终预览" class="headerlink" title="最终预览"></a>最终预览</h2><h3 id="全屏显示（只是截取了一部分）"><a href="#全屏显示（只是截取了一部分）" class="headerlink" title="全屏显示（只是截取了一部分）"></a>全屏显示（只是截取了一部分）</h3><p><img src="/2021/03/28/hackintosh3/full.png" alt="full"></p><h3 id="窗口演示"><a href="#窗口演示" class="headerlink" title="窗口演示"></a>窗口演示</h3><p><img src="/2021/03/28/hackintosh3/window.png" alt="window"></p><h3 id="运行neofetch"><a href="#运行neofetch" class="headerlink" title="运行neofetch"></a>运行neofetch</h3><p><img src="/2021/03/28/hackintosh3/neofetch.png" alt="neofetch"></p><p><strong>以后会提供我用的主题配置文件以及Terminal主题、Powerline字体</strong></p>]]></content>
      
      
      <categories>
          
          <category> 黑苹果 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>黑苹果核显测试</title>
      <link href="2021/03/25/hackintosh2/"/>
      <url>2021/03/25/hackintosh2/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>以下是黑苹果GeekBench5 的GPU跑分情况，通过核显看我机的EFI对各版本表现情况。以下记录可能有缺漏</li></ul><a id="more"></a><h2 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h2><ul><li>UHD 620</li></ul><h2 id="Win10"><a href="#Win10" class="headerlink" title="Win10"></a>Win10</h2><p>OpenCL：5109</p><h2 id="Catalina-10-15-4"><a href="#Catalina-10-15-4" class="headerlink" title="Catalina 10.15.4"></a>Catalina 10.15.4</h2><p>OpenCL：4800</p><p>CPU：单核790，多核3119</p><h2 id="Catalina-10-15-7"><a href="#Catalina-10-15-7" class="headerlink" title="Catalina 10.15.7"></a>Catalina 10.15.7</h2><p>OpenCL：4362</p><p>CPU：单核788，多核3125</p><h2 id="Mojave-10-14-6"><a href="#Mojave-10-14-6" class="headerlink" title="Mojave 10.14.6"></a>Mojave 10.14.6</h2><p>OpenCL：4772</p><p>CPU：单核793，多核3183</p><h2 id="Big-Sur（更换EFI）"><a href="#Big-Sur（更换EFI）" class="headerlink" title="Big Sur（更换EFI）"></a>Big Sur（更换EFI）</h2><p>OpenCL：4875</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>无论如何，黑苹果都难以超越win10的性能体验</p>]]></content>
      
      
      <categories>
          
          <category> 黑苹果 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>macOS安装后该做的事</title>
      <link href="2021/03/25/hackintosh1/"/>
      <url>2021/03/25/hackintosh1/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote><p>此文章是记录安装完macOS需要做哪些比较重要的工作</p></blockquote><a id="more"></a><h2 id="一、修改host"><a href="#一、修改host" class="headerlink" title="一、修改host"></a>一、修改host</h2><blockquote><p>打开第三方软件，有可能会发生软件一直在Dock栏跳来跳去的现象，这是因为系统会连接服务器进行软件签名校验，如果网络不好，那就会一直跳，很久才反应过来。</p></blockquote><h3 id="打开hosts"><a href="#打开hosts" class="headerlink" title="打开hosts"></a>打开hosts</h3><ul><li>在终端输入以下命令，进入/etc，打开hosts</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cd</span> /etc/hosts</span><br></pre></td></tr></table></figure><ul><li>在里面添加以下内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 ocsp.apple.com</span><br></pre></td></tr></table></figure><blockquote><p>此方法在Big Sur好像不管用</p></blockquote><h2 id="二、关闭更新"><a href="#二、关闭更新" class="headerlink" title="二、关闭更新"></a>二、关闭更新</h2><ul><li>设置-&gt;软件更新</li></ul><h2 id="三、开启trim"><a href="#三、开启trim" class="headerlink" title="三、开启trim"></a>三、开启trim</h2><blockquote><p>仅支持trim算法的固态硬盘有效</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo trimforce <span class="built_in">enable</span></span><br></pre></td></tr></table></figure><h2 id="四、允许任何来源程序"><a href="#四、允许任何来源程序" class="headerlink" title="四、允许任何来源程序"></a>四、允许任何来源程序</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo spctl --master-disable</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 黑苹果 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>npm镜像源</title>
      <link href="2021/03/25/npm0/"/>
      <url>2021/03/25/npm0/</url>
      
        <content type="html"><![CDATA[<ul><li>关于npm国内源的事</li></ul><a id="more"></a><h2 id="ArchLinux安装npm"><a href="#ArchLinux安装npm" class="headerlink" title="ArchLinux安装npm"></a>ArchLinux安装npm</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S npm</span><br></pre></td></tr></table></figure><h2 id="通过命令配置"><a href="#通过命令配置" class="headerlink" title="通过命令配置"></a>通过命令配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure><h3 id="验证命令"><a href="#验证命令" class="headerlink" title="验证命令"></a>验证命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure><p>参考链接：</p><p><a href="https://blog.csdn.net/Sheyami/article/details/121417445">NPM:修改npm源</a></p><p><a href="https://www.cnblogs.com/wenhsing/p/14266478.html">[NPM] NPM 修改源为国内阿里云源</a></p>]]></content>
      
      
      <categories>
          
          <category> npm使用 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>导出Edge浏览器的扩展</title>
      <link href="2021/02/13/browser0/"/>
      <url>2021/02/13/browser0/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>简单记录Edge导出扩展文件(.crx)，此方法适用于Chrome内核的Edge，Chrome应该适合</li></ul><a id="more"></a><h2 id="一、扩展位置"><a href="#一、扩展位置" class="headerlink" title="一、扩展位置"></a>一、扩展位置</h2><p>位于 </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">C:\Users\&#123;用户名&#125;\AppData\Local\Microsoft\Edge\User</span> <span class="string">Data\Default\Extensions</span></span><br></pre></td></tr></table></figure><p>如图所示</p><p><img src="/2021/02/13/browser0/1.png"></p><h2 id="二、操作"><a href="#二、操作" class="headerlink" title="二、操作"></a>二、操作</h2><p>然后进入Edge浏览器的 <strong>扩展</strong> 页面（要开启”开发人员模式”），扩展页面的扩展如下</p><p><img src="/2021/02/13/browser0/2.png"></p><p>其中<font color="#FF0000">  红线ID </font>的是插件文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">（即对应C:\Users\&#123;用户名&#125;\AppData\Local\Microsoft\Edge\User Data\Default\Extensions下的文件夹）</span><br></pre></td></tr></table></figure><p>然后点击打包扩展，扩展根目录就选择</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\&#123;用户名&#125;\AppData\Local\Microsoft\Edge\User Data\Default\Extensions\插件ID\插件版本</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">C:\Users\Admin\AppData\Local\Microsoft\Edge\User</span> <span class="string">Data\Default\Extensions\djflhoibgkdhkhhcedjiklpkjnoahfmg\1.0.43_0</span></span><br></pre></td></tr></table></figure><p>然后就在</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Admin\AppData\Local\Microsoft\Edge\UserData\Default\Extensions\djflhoibgkdhkhhcedjiklpkjnoahfmg\下看到打包的扩展文件</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 浏览器 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>黑苹果驱动设置for fl8000u</title>
      <link href="2021/02/10/hackintosh/"/>
      <url>2021/02/10/hackintosh/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>这是安装catalina用到的基本设定</p><ul><li><p>设备基本配置</p></li><li><p>用到的工具</p></li><li><p>GPU解决</p></li><li><p>声卡解决</p></li><li><p>网卡解决</p></li><li><p>触摸板解决</p></li><li><p>-v问题</p></li><li><p>亮度调节</p></li><li><p>win10/macos时间问题</p></li><li><p>安装时显示系统文件已损坏的解决</p></li><li><p>BIOS版本309卡苹果标志解决</p><a id="more"></a></li></ul><h2 id="一、设备基本配置"><a href="#一、设备基本配置" class="headerlink" title="一、设备基本配置"></a>一、设备基本配置</h2><table><thead><tr><th>配置</th><th>型号</th><th>兼容</th></tr></thead><tbody><tr><td>处理器</td><td>i7-8550u</td><td>Y</td></tr><tr><td>核显</td><td>UHD620</td><td>Y</td></tr><tr><td>独显</td><td>GeForce 940mx</td><td>N</td></tr><tr><td>机械硬盘</td><td>HGST HTS541010B7E610</td><td>Y</td></tr><tr><td>固态硬盘</td><td>ADATA SP580M</td><td>Unknow</td></tr><tr><td>内存</td><td>4G x 2 DDR4 2400MHz</td><td>Y</td></tr><tr><td>声卡</td><td>Realtek ALC294</td><td>Y</td></tr><tr><td>无线网卡</td><td>Atheros AR9565</td><td>Y</td></tr><tr><td>蓝牙</td><td>Atheros AR9565</td><td>N</td></tr><tr><td>有线网卡</td><td>Realtek RTL8168/8111</td><td>Y</td></tr></tbody></table><h2 id="二、用到的工具"><a href="#二、用到的工具" class="headerlink" title="二、用到的工具"></a>二、用到的工具</h2><ul><li>Clover Configurator</li><li>Kext Utility</li></ul><h2 id="三、GPU解决"><a href="#三、GPU解决" class="headerlink" title="三、GPU解决"></a>三、GPU解决</h2><p>用到的工具：</p><ul><li>Clover Configurator</li></ul><blockquote><p>由于只能用核显，所以</p></blockquote><p>使用Clover Configurator打开在EFI分区的config.plist</p><p>选择Devices -&gt; IntelGFX 注入 0x59168086</p><p>然后选择Graphics-&gt; ig-platform-id 注入 0x591B0000</p><h2 id="四、声卡解决"><a href="#四、声卡解决" class="headerlink" title="四、声卡解决"></a>四、声卡解决</h2><ul><li>以下的操作，几乎需要清除NVRAM（clover按F11）</li></ul><h3 id="Apple-ALC系列"><a href="#Apple-ALC系列" class="headerlink" title="Apple ALC系列"></a>Apple ALC系列</h3><p>注入的id要根据自己的声卡来找</p><blockquote><p> 黑苹果声卡id查找表（AppleALC&amp;Lilu版本不同，id可能不同）：<a href="https://github.com/acidanthera/AppleALC/wiki/Supported-codecs">https://github.com/acidanthera/AppleALC/wiki/Supported-codecs</a></p></blockquote><h3 id="万能驱动系列"><a href="#万能驱动系列" class="headerlink" title="万能驱动系列"></a>万能驱动系列</h3><p>先进入/System/Library/Extension删除自带驱动AppleHDA，然后把VoodooHDA驱动放入到clover–kext–other目录下，最后重建缓存。</p><h2 id="五、网卡解决"><a href="#五、网卡解决" class="headerlink" title="五、网卡解决"></a>五、网卡解决</h2><p>复制AirPortAtheros40.kext和HS80211Family.kext到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CLOVER/kexts/Other</span><br></pre></td></tr></table></figure><p>然后使用 Kext Utility 重建缓存</p><h2 id="六、触摸板解决"><a href="#六、触摸板解决" class="headerlink" title="六、触摸板解决"></a>六、触摸板解决</h2><p>复制VoodooI2C.kext和VoodooI2CHID.kext到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CLOVER/kexts/Other</span><br></pre></td></tr></table></figure><p>然后使用 Kext Utility 重建缓存</p><h2 id="七、-v问题"><a href="#七、-v问题" class="headerlink" title="七、-v问题"></a>七、-v问题</h2><p>开机的时候，屏幕显示跑着一堆白色的代码，然后再显示logo</p><p>这是传说中的跑码，在配置文件中启动选项添加了-v导致的</p><p>添加/去掉-v的方法：</p><p>使用Clover Configurator打开在EFI分区的config.plist</p><p>在Boot那里找到引导参数，把-v去掉就行</p><p>然后开机就直接显示logo了，但是不会加快开机速度，只不过是不显示跑码而已</p><h2 id="八、亮度调节"><a href="#八、亮度调节" class="headerlink" title="八、亮度调节"></a>八、亮度调节</h2><ul><li>目前还没有可靠的解决方法，即使解决了都会出现奇葩问题：<ul><li>能通过键盘调节亮度，但是不能保存亮度</li><li>能调节和保存亮度，但是不能通过键盘调节亮度</li><li>能调节和保存亮度，但是即不能通过键盘调节，亮度梯度太小，要不就直接黑屏</li></ul></li></ul><h2 id="九、win-macOS的时间问题"><a href="#九、win-macOS的时间问题" class="headerlink" title="九、win/macOS的时间问题"></a>九、win/macOS的时间问题</h2><h3 id="1）不一致问题"><a href="#1）不一致问题" class="headerlink" title="1）不一致问题"></a>1）不一致问题</h3><blockquote><p>主要是因为win采用的是本地时间（local time），macOS和Linux采用的是UTC时间，所以导致有时差</p></blockquote><p>解决方法：只能把win的local time改成UTC，因为在macOS把UTC改成local time根本走不通</p><p>在windows的cmd执行以下命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Reg add HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d <span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2）bios时间停止问题"><a href="#2）bios时间停止问题" class="headerlink" title="2）bios时间停止问题"></a>2）bios时间停止问题</h3><p>这很玄学，直接进入一次Linux系统就能解决</p><h2 id="十一、安装时显示系统文件已损坏的解决"><a href="#十一、安装时显示系统文件已损坏的解决" class="headerlink" title="十一、安装时显示系统文件已损坏的解决"></a>十一、安装时显示系统文件已损坏的解决</h2><p>这种问题，一般不是镜像本身出问题，而是镜像里面的证书过期，没有更新证书导致的，所以要通过修改时间来解决</p><p>进入安装器自带的终端，然后按以下要求输入：</p><p>Catalina：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date 101112132019</span><br></pre></td></tr></table></figure><p>Mojave：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date 1025102018.20</span><br></pre></td></tr></table></figure><blockquote><p>注：以上的时间不一定是”合适”的，可能要自己去网上查。</p></blockquote><h2 id="十二、BIOS版本309卡苹果标志解决"><a href="#十二、BIOS版本309卡苹果标志解决" class="headerlink" title="十二、BIOS版本309卡苹果标志解决"></a>十二、BIOS版本309卡苹果标志解决</h2><ul><li>把BIOS版本降低到301/303/306</li><li>在EFI中添加<strong>VoodooTSCSync.kext</strong>解决</li></ul>]]></content>
      
      
      <categories>
          
          <category> 黑苹果 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>IDEA下载直链规律</title>
      <link href="2021/02/04/play7/"/>
      <url>2021/02/04/play7/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>IDEA下载直链规律</p><a id="more"></a><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>IDEA下载直链的规律</p><p>Win版本的</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">https</span>://download.jetbrains.<span class="number">8686</span>c.com/idea/ideaIU-<span class="number">2020</span>.<span class="number">3</span>.<span class="number">2</span>.exe</span><br></pre></td></tr></table></figure><p>Linux版本的</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">https</span>://download.jetbrains.<span class="number">8686</span>c.com/idea/ideaIU-<span class="number">2020</span>.<span class="number">3</span>.<span class="number">2</span>-no-jbr.tar.gz</span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">https</span>://download.jetbrains.<span class="number">8686</span>c.com/idea/ideaIU-<span class="number">2020</span>.<span class="number">3</span>.<span class="number">2</span>.tar.gz</span><br></pre></td></tr></table></figure><p>MacOS版本的</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">https</span>://download.jetbrains.<span class="number">8686</span>c.com/idea/ideaIU-<span class="number">2020</span>.<span class="number">3</span>.<span class="number">2</span>.dmg</span><br></pre></td></tr></table></figure><p>MacOS ARM版</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">https</span>://download.jetbrains.<span class="number">8686</span>c.com/idea/ideaIU-<span class="number">2020</span>.<span class="number">3</span>.<span class="number">2</span>-aarch<span class="number">64</span>.dmg</span><br></pre></td></tr></table></figure><p>因为idea工具的版本号，只是日期在变</p><p>所以修改日期就行，for example</p><p>下载 2019.3.2 的</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">https</span>://download.jetbrains.<span class="number">8686</span>c.com/idea/ideaIU-<span class="number">2019</span>.<span class="number">3</span>.<span class="number">2</span>.exe</span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">https</span>://download.jetbrains.<span class="number">8686</span>c.com/idea/ideaIU-<span class="number">2020</span>.<span class="number">3</span>.<span class="number">2</span>.tar.gz</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 玩 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>解决部分ubuntu问题</title>
      <link href="2021/02/04/play6/"/>
      <url>2021/02/04/play6/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>解决 A stop job is running for snap daemon</li><li>如何实现笔记本关闭盖子后无操作（不休眠/锁屏）</li></ul><a id="more"></a><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h3 id="1、解决-A-stop-job-is-running-for-snap-daemon"><a href="#1、解决-A-stop-job-is-running-for-snap-daemon" class="headerlink" title="1、解决 A stop job is running for snap daemon"></a>1、解决 A stop job is running for snap daemon</h3><p>修改 /etc/systemd/system.conf</p><p>找到如下内容，去掉前面的#，后面的时间90s改为10s</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#DefaultTimeoutStartSec=90s</span></span><br><span class="line"><span class="comment">#DefaultTimeoutStopSec=90s</span></span><br></pre></td></tr></table></figure><p>修改后的效果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DefaultTimeoutStartSec=10s</span><br><span class="line">DefaultTimeoutStopSec=10s</span><br></pre></td></tr></table></figure><p>然后执行以下命令，重载服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure><h3 id="2、如何实现笔记本关闭盖子后无操作"><a href="#2、如何实现笔记本关闭盖子后无操作" class="headerlink" title="2、如何实现笔记本关闭盖子后无操作"></a>2、如何实现笔记本关闭盖子后无操作</h3><p>修改 /etc/systemd/system.conf，找到以下两句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HandleLidSwitch</span><br><span class="line">HandleLidSwitchExternalPower</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HandleLidSwitch=ignore </span><br><span class="line">HandleLidSwitchExternalPower=ignore </span><br></pre></td></tr></table></figure><p>然后执行以下命令，重载服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service systemd-logind restart</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Grub添加Win10引导</title>
      <link href="2021/02/04/play5/"/>
      <url>2021/02/04/play5/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>通过修改</p><p>/boot/grub/grub.cfg 或者在 /etc/grub.d里面的文件</p><p>添加Win10引导</p><a id="more"></a><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>在 /boot/grub/grub.cfg添加以下内容（或者在 /etc/grub.d里面的文件添加）</p><p>这次是在 /etc/grub.d下的40_custom 添加以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menuentry <span class="string">&#x27;Microsoft Windows 10&#x27;</span> &#123;</span><br><span class="line">insmod part_gpt<span class="comment">##  -&gt; 现在一般是gpt格式的硬盘</span></span><br><span class="line">insmod fat <span class="comment">## -&gt; 实际上是fat格式，可以自己试一下是vfat还是fat</span></span><br><span class="line"><span class="built_in">set</span> root=<span class="string">&#x27;(hd1,gpt2)&#x27;</span><span class="comment">## -&gt;加载EFI文件的磁盘位置</span></span><br><span class="line">chainloader /EFI/Microsoft/Boot/Bootmgfw.efi<span class="comment">## -&gt;在(hd1,gpt2)加载Bootmgfw.efi</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后执行以下命令，刷新引导</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-grub</span><br></pre></td></tr></table></figure><h2 id="命令参考"><a href="#命令参考" class="headerlink" title="命令参考"></a>命令参考</h2><p>查看分区id</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo blkid</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>获取Android触摸采样率</title>
      <link href="2021/01/23/android0/"/>
      <url>2021/01/23/android0/</url>
      
        <content type="html"><![CDATA[<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>使用getevent来获取触摸采样率</p><a id="more"></a><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>使用adb，输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell getevent -t -r -l</span><br></pre></td></tr></table></figure><p>然后在手机快速滑动屏幕，就会显示采样率</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PDF文档资源</title>
      <link href="2021/01/23/play2/"/>
      <url>2021/01/23/play2/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>部分文档网盘资源</p><a id="more"></a><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h3 id="《电脑爱好者》杂志"><a href="#《电脑爱好者》杂志" class="headerlink" title="《电脑爱好者》杂志"></a>《电脑爱好者》杂志</h3><blockquote><p>（百度云盘）链接：<a href="https://pan.baidu.com/s/1nRvrwcZ0iuzjp_SVrJd_Pg">电脑爱好者</a><br>验证码：3p52</p></blockquote><blockquote><p>（lanzo）链接：<a href="https://zhenxz.lanzous.com/b04gijhyj">https://zhenxz.lanzous.com/b04gijhyj</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 资源 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>云盘视频资源</title>
      <link href="2021/01/23/play1/"/>
      <url>2021/01/23/play1/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>部分视频网盘资源</p><a id="more"></a><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h3 id="YM-YPM"><a href="#YM-YPM" class="headerlink" title="YM/YPM"></a>YM/YPM</h3><blockquote><p>（百度云盘）链接：<a href="https://yun.baidu.com/s/14_kWtyKB2LKRKvYSw1NMgg">Yes minister&amp;Yes prime minister</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 资源 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>win10欢乐的蓝屏</title>
      <link href="2021/01/20/play0/"/>
      <url>2021/01/20/play0/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>在win10简单运行蓝屏</p><ul><li>支持20H2</li></ul><a id="more"></a><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>用浏览器（chrome，firefox，edge）访问了这个路径，然后电脑蓝屏了</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\.\globalroot\device\condrv\kernelconnect</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 玩 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>给博客简单加密</title>
      <link href="2021/01/19/createblog1/"/>
      <url>2021/01/19/createblog1/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>1）安装<br>2）使用</p><a id="more"></a><h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure><h2 id="二、快速使用"><a href="#二、快速使用" class="headerlink" title="二、快速使用"></a>二、快速使用</h2><p>把 <code>password</code> 字段添加到文章信息头，</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2016-03-30 21:18:02</span><br><span class="line">password: hello</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>再使用 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code> 在本地预览加密的文章.</p><h2 id="三、参考"><a href="#三、参考" class="headerlink" title="三、参考"></a>三、参考</h2><p><a href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md#%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8">hexo-blog-encrypt</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo + Next搭建博客</title>
      <link href="2021/01/18/createblog/"/>
      <url>2021/01/18/createblog/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>简要地记录静态博客的搭建过程</p><a id="more"></a><h2 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h2><ul><li>Git</li><li>Node.js</li><li>GIthub账号</li><li>Hexo</li></ul><h3 id="1）安装Git、Node-js"><a href="#1）安装Git、Node-js" class="headerlink" title="1）安装Git、Node.js"></a>1）安装Git、Node.js</h3><ul><li>自行去官网找</li></ul><h3 id="2）安装Hexo"><a href="#2）安装Hexo" class="headerlink" title="2）安装Hexo"></a>2）安装Hexo</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli</span> <span class="string">-g</span></span><br></pre></td></tr></table></figure><h2 id="二、创建本地博客"><a href="#二、创建本地博客" class="headerlink" title="二、创建本地博客"></a>二、创建本地博客</h2><h3 id="1）下载博客相关文件"><a href="#1）下载博客相关文件" class="headerlink" title="1）下载博客相关文件"></a>1）下载博客相关文件</h3><p>在要创建博客的位置，假如创建的博客文件夹名称为blog，则</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">init</span> <span class="string">blog</span></span><br></pre></td></tr></table></figure><p>然后会自动创建一个blog目录，并且自动从GitHub下载相应的代码文件，blog目录的内容如下：</p><p><img src="/2021/01/18/createblog/dir.png" alt="dir"></p><h3 id="2）编译"><a href="#2）编译" class="headerlink" title="2）编译"></a>2）编译</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">g</span></span><br></pre></td></tr></table></figure><h3 id="3）运行"><a href="#3）运行" class="headerlink" title="3）运行"></a>3）运行</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">s</span></span><br></pre></td></tr></table></figure><p>然后访问 <a href="http://localhost:4000/">http://localhost:4000/</a> </p><p>就可以看到创建的博客</p><h2 id="三、使用主题"><a href="#三、使用主题" class="headerlink" title="三、使用主题"></a>三、使用主题</h2><h3 id="1）下载"><a href="#1）下载" class="headerlink" title="1）下载"></a>1）下载</h3><p>默认的主题是landscape，位于node_modules里面，这次使用的主题是next，在blog根目录下，输入</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-theme-next</span></span><br></pre></td></tr></table></figure><p>然后在blog\node_modules文件夹下，就会有<strong>hexo-theme-next</strong> 主题配置文件</p><h3 id="2）主题配置"><a href="#2）主题配置" class="headerlink" title="2）主题配置"></a>2）主题配置</h3><p>方法有两种：</p><ul><li>可以把hexo-theme-next文件夹复制到 blog\theme目录下，并改名为next</li><li>直接在blog\node_modules目录下，把hexo-theme-next文件夹改名为next</li></ul><h3 id="3）站点文件配置"><a href="#3）站点文件配置" class="headerlink" title="3）站点文件配置"></a>3）站点文件配置</h3><p>修改blog目录下的<strong>_config.yml</strong></p><p>找到</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">landscape</span></span><br></pre></td></tr></table></figure><p>把它改为</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure><p>最后编译，运行</p><h2 id="四、部署博客"><a href="#四、部署博客" class="headerlink" title="四、部署博客"></a>四、部署博客</h2><h3 id="1）站点文件配置"><a href="#1）站点文件配置" class="headerlink" title="1）站点文件配置"></a>1）站点文件配置</h3><p>修改blog目录下的 _config.yml 添加以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">仓库地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo d</span></span><br></pre></td></tr></table></figure><p>上传到git仓库</p><h2 id="五、参考网址"><a href="#五、参考网址" class="headerlink" title="五、参考网址"></a>五、参考网址</h2><p><a href="https://zdran.com/20180326.html">https://zdran.com/20180326.html</a></p><p><a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p><p><a href="http://theme-next.iissnan.com/">http://theme-next.iissnan.com/</a></p><p><a href="https://suyin-blog.club/2020/323EH2Y/">https://suyin-blog.club/2020/323EH2Y/</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>博文模板</title>
      <link href="2021/01/18/template/"/>
      <url>2021/01/18/template/</url>
      
        <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>此文章的主要内容有：<br>1）预览显示<br>2）分类/标签设定<br>3）插入图片</p><a id="more"></a><h2 id="1）添加预览显示"><a href="#1）添加预览显示" class="headerlink" title="1）添加预览显示"></a>1）添加预览显示</h2><p>在Markdown文档要 <strong>预览</strong> 的位置添加如下内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- more --&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2）分类-标签设定"><a href="#2）分类-标签设定" class="headerlink" title="2）分类/标签设定"></a>2）分类/标签设定</h2><p>在Markdown编辑器中，设定的标签/分类代码如下：</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title:                      //文章标题</span><br><span class="line">date: 2021<span class="string">-01</span><span class="string">-18</span> 11:59:35   //文章时间</span><br><span class="line"><span class="keyword">tags:</span>                       //标签</span><br><span class="line">categories:                 //模板</span><br><span class="line">description:                //描述</span><br></pre></td></tr></table></figure><h2 id="3）文章插入图片"><a href="#3）文章插入图片" class="headerlink" title="3）文章插入图片"></a>3）文章插入图片</h2><p>在插入位置添加如下代码：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="selector-attr">[名称]</span>(图片名称.扩展名)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 模板 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
